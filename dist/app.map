{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.map","sourcesContent":["const game = new Phaser.Game(1280, 720, Phaser.AUTO);\n\nconst colorSpace = 255*255*255;\nfunction randomColorHex() {\n    return Math.floor(Math.random() * (colorSpace));\n}\n\nclass GameCanvas {\n    height: number;\n    width: number;\n    grid: Array<Array<GameDot>>;\n\n    constructor(width, height) {\n        this.height = height;\n        this.width = width;\n        this.grid = Array(width).fill().map(()=>Array(height).fill());\n        this.populateGrid();\n    }\n\n    populateGrid() {\n        this.grid = this.grid.map( (col,i) => col.map( (el,j) => new GameDot(randomColorHex(), i, j)))\n    }\n}\n\nclass GameDot {\n    color: number;\n    x: number;\n    y: number;\n\n    constructor(color: number, x: number, y: number) {\n        this.color = color;\n        this.x = x;\n        this.y = y;\n    }\n}\n\nclass canvasState extends Phaser.State {\n    canvas: GameCanvas;\n    canvas_HEIGHT = 64;\n    canvas_WIDTH = 128;\n    dot_HEIGHT: number;\n    dot_WIDTH: number;\n\n    init() {\n        this.canvas = new GameCanvas(this.canvas_WIDTH, this.canvas_HEIGHT);\n        this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n        this.scale.pageAlignVertically = true;\n        this.scale.pageAlignHorizontally = true;\n        this.game.stage.backgroundColor = '#090849';\n    \n        this.game.stage.disableVisibilityChange = true;\n      }\n\n    create() {\n        let graphics = game.add.graphics(0,0);\n\n        this.createCanvas(graphics);\n        /*\n        graphics.beginFill(0x283149)\n        graphics.drawRect(0,0, game.world.width, 80);\n        graphics.endFill\n        */\n        const style3 = {\n            fill: \"#FFF\",\n            font: \"32px Press Start 2P\",\n        }\n        \n        this.add.text(10, 25, \"Some Text\", style3);\n    }\n    createCanvas(graphics) {\n        this.canvas.grid.forEach(col => col.forEach( dot => this.paintDot(graphics, dot)));\n    }\n    paintDot(graphics, dot: GameDot) {\n        graphics.beginFill(dot.color);\n        graphics.drawRect(dot.x*10, dot.y*10+80, 10, 10);\n        graphics.endFill();\n    }\n}\n\ngame.state.add('canvasState', canvasState);\n\ngame.state.start('canvasState');"]}